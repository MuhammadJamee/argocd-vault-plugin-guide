vault write auth/kubernetes/config \
        token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
        kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443" \
        kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt


kubectl exec -ti vault-0 -- vault write auth/kubernetes/config \
    token_reviewer_jwt="'$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)'" \
    kubernetes_host=(clusterip) \
    kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

kubectl cluster-info

echo "Enter Token Here"
vault login
vault auth enable kubernetes 
vault write auth/kubernetes/config \
token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
kubernetes_host=https:$clusterip \
kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
vault write auth/kubernetes/role/argocd \
    bound_service_account_names=default \
    bound_service_account_namespaces=argocd \
    policies=argocd \
    ttl=1h

vault secrets enable -path=avp kv-v2    

vault policy write argocd - <<EOF
path "*" {
  capabilities = ["read"]
}
EOF

vault kv put avp/data/test sample=secret

exit






















#kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
#kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o name | cut -d'/' -f 2
#kubectl port-forward svc/argocd-server -n argocd 8080:443
#installing vault using helm
#echo "Installing Helm and Consul"
#helm repo add hashicorp https://helm.releases.hashicorp.com
#helm install consul hashicorp/consul --values helm-consul-values.yml
read -p "Pause Time 5 seconds" -t 180
read -p "Continuing in 5 Seconds...." -t 180
echo "Continuing ...."
kubectl get pods
echo "Consul should be 2/2"
helm install vault hashicorp/vault --values helm-vault-values.yml
kubectl get pods -l app.kubernetes.io/name=vault
kubectl exec -ti vault-0 -- vault operator init
read -p "Save these keys somewhere safe" -t 60
kubectl exec vault-0 -- vault operator init -key-shares=1 -key-threshold=1 -format=json > cluster-keys.json
VAULT_UNSEAL_KEY=$(cat cluster-keys.json | jq -r ".unseal_keys_b64[]")
kubectl exec vault-0 -- vault operator unseal $VAULT_UNSEAL_KEY
kubectl exec vault-1 -- vault operator unseal $VAULT_UNSEAL_KEY
kubectl exec vault-2 -- vault operator unseal $VAULT_UNSEAL_KEY
kubectl get pods -l app.kubernetes.io/name=vault
kubectl exec --stdin=true --tty=true vault-0 -- /bin/sh
echo "Enter your token here"
vault login
vault auth enable kubernetes


$KUBERNETES_PORT_443_TCP_ADDR
